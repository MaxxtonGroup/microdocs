{"info":{"description":"Service for which owns the customers and their addresses","title":"customer-service","version":"0.0.1","versions":["0.0.1"],"group":"default"},"paths":{"/api/v1/customers/{customerId}":{"get":{"controller":{"$ref":"#/components/CustomerController"},"method":{"$ref":"#/components/CustomerController/methods/getCustomer(Long)"},"description":"Get a specific customer by id","operationId":"getCustomer","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"id of the customer","required":true,"name":"customerId","in":"path"}],"responses":{"200":{},"404":{"description":"if customer doesn't exists"},"default":{"description":"the customer or null","schema":{"$ref":"#/definitions/com.example.service.customer.domain.Customer"}}}},"delete":{"controller":{"$ref":"#/components/CustomerController"},"method":{"$ref":"#/components/CustomerController/methods/removeCustomer(Long)"},"description":"Delete customer by id","operationId":"removeCustomer","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"id of the customer","required":true,"name":"customerId","in":"path"}],"responses":{"200":{"description":"the customer is removed"},"404":{"description":"the customer did not exists"},"default":{"description":"OK if the customer is removed, NOT_FOUND if the customer did not exists","schema":{"$ref":"#/definitions/org.springframework.http.ResponseEntity"}}}}},"/api/v1/customers":{"post":{"controller":{"$ref":"#/components/CustomerController"},"method":{"$ref":"#/components/CustomerController/methods/createCustomer(Customer)"},"description":"Create new customer","operationId":"createCustomer","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"customer","in":"body","description":"new customer","schema":{"$ref":"#/definitions/com.example.service.customer.domain.Customer"}}],"responses":{"201":{"description":"customer is created"},"409":{"description":"customer with the same email already exists"},"default":{"description":"CREATED customer with a customerId or CONFLICT if customer with the same email already exists","schema":{"$ref":"#/definitions/com.example.service.customer.domain.Customer"}}}},"get":{"controller":{"$ref":"#/components/CustomerController"},"method":{"$ref":"#/components/CustomerController/methods/getCustomers(Pageable)"},"description":"Request a page of customers","operationId":"getCustomers","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"200":{},"default":{"description":"Page of customers","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.example.service.customer.domain.Customer"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}}},"definitions":{"org.springframework.http.ResponseEntity":{"type":"object"},"com.example.service.customer.domain.Address":{"type":"object","description":"","mappings":{"relational":{"tables":["ADDRESS"]}},"properties":{"zipCode":{"type":"string"},"address":{"type":"string"},"city":{"type":"string"},"houseNumber":{"type":"string"},"addressId":{"type":"integer","mappings":{"relational":{"primary":true}}}},"name":"Address"},"com.example.service.customer.domain.Customer":{"type":"object","description":"","mappings":{"relational":{"tables":["CUSTOMER"]}},"properties":{"firstName":{"type":"string"},"lastName":{"type":"string"},"billAddress":{"$ref":"#/definitions/com.example.service.customer.domain.Address"},"customerId":{"type":"integer","mappings":{"relational":{"primary":true}}},"deliverAddress":{"$ref":"#/definitions/com.example.service.customer.domain.Address"},"email":{"type":"string"}},"name":"Customer"}},"components":{"CustomerService":{"name":"com.example.service.customer.service.CustomerService","type":"service","file":"com/example/service/customer/service/CustomerService.java","description":"Service for managing CRUD actions on Customers","authors":["Hermans (s.hermans@maxxton.com)"],"annotations":{"Service":{}},"methods":{"removeCustomer(Long)":{"name":"removeCustomer","description":"Remove customer from the repository","parameters":["Long"],"lineNumber":64},"getCustomer(Long)":{"name":"getCustomer","description":"Get customer by id","parameters":["Long"],"lineNumber":43},"getCustomer(String)":{"name":"getCustomer","description":"Get specific customer by email","parameters":["String"],"lineNumber":34},"getCustomers(Pageable)":{"name":"getCustomers","description":"Get a page of customers","parameters":["Pageable"],"lineNumber":25},"createCustomer(Customer)":{"name":"createCustomer","description":"Create new customer","parameters":["Customer"],"lineNumber":52}}},"CustomerRepository":{"name":"com.example.service.customer.repository.CustomerRepository","type":"repository","file":"com/example/service/customer/repository/CustomerRepository.java","description":"Repository for persisting Customers","authors":["Hermans (s.hermans@maxxton.com)"],"annotations":{"Repository":{}},"methods":{"findByEmail(String)":{"name":"findByEmail","description":"","parameters":["String"],"lineNumber":14}}},"CustomerServiceApplication":{"name":"com.example.service.customer.CustomerServiceApplication","type":"application","file":"com/example/service/customer/CustomerServiceApplication.java","description":"Service for which owns the customers and their addresses","authors":["Hermans (s.hermans@maxxton.com)"],"annotations":{"SpringBootApplication":{}}},"CustomerController":{"name":"com.example.service.customer.controller.CustomerController","type":"controller","file":"com/example/service/customer/controller/CustomerController.java","description":"Controller for handling all customer endpoints","authors":["Hermans (s.hermans@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"value":"\"/api/v1/customers\""}}},"methods":{"removeCustomer(Long)":{"name":"removeCustomer","description":"Delete customer by id","parameters":["Long"],"lineNumber":75},"getCustomer(Long)":{"name":"getCustomer","description":"Get a specific customer by id","parameters":["Long"],"lineNumber":42},"getCustomers(Pageable)":{"name":"getCustomers","description":"Request a page of customers","parameters":["Pageable"],"lineNumber":30},"createCustomer(Customer)":{"name":"createCustomer","description":"Create new customer","parameters":["Customer"],"lineNumber":58}}}}}