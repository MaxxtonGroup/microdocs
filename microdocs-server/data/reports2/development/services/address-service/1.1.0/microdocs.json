{"info":{"description":"This Microservice owns all the Addresses","title":"address-service","group":"default","version":"1.1.0","versions":["1.1.0"]},"paths":{"/api/v1/bankaccounts":{"post":{"controller":{"$ref":"#/components/BankAccountController"},"method":{"$ref":"#/components/BankAccountController/methods/createBankAccount(BankAccount)"},"description":"Create a new bank account","operationId":"createBankAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"bankAccount","in":"body","description":"contents of the new bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}}],"responses":{"default":{"description":"a new bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}}}},"get":{"controller":{"$ref":"#/components/BankAccountController"},"method":{"$ref":"#/components/BankAccountController/methods/getBankAccounts(Specifications,Pageable)"},"description":"Get all bank accounts","operationId":"getBankAccounts","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"default":{"description":"a page filled with bank accounts","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}},"/api/v1/bankaccounts/{bankAccountId}":{"get":{"controller":{"$ref":"#/components/BankAccountController"},"method":{"$ref":"#/components/BankAccountController/methods/getBankAccount(Long)"},"description":"Get a single bank account","operationId":"getBankAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the bank account","required":true,"name":"bankAccountId","in":"path"}],"responses":{"default":{"description":"a single bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}}}},"delete":{"controller":{"$ref":"#/components/BankAccountController"},"method":{"$ref":"#/components/BankAccountController/methods/deleteBankAccount(Long)"},"description":"Delete an existing bank account","operationId":"deleteBankAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the bank account","required":true,"name":"bankAccountId","in":"path"}],"responses":{}},"put":{"controller":{"$ref":"#/components/BankAccountController"},"method":{"$ref":"#/components/BankAccountController/methods/updateBankAccount(Long,BankAccount)"},"description":"Update an existing bank account","operationId":"updateBankAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the bank account","required":true,"name":"bankAccountId","in":"path"},{"name":"bankAccount","in":"body","description":"  the new contents of the bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}}],"responses":{"default":{"description":"a new bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccount"}}}}},"/api/v1/addresses/countries/{countryId}/states":{"get":{"controller":{"$ref":"#/components/StateController"},"method":{"$ref":"#/components/StateController/methods/getStatesByCountry(Long,Pageable)"},"description":"Get all countries","operationId":"getStatesByCountry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the country identifier","required":true,"name":"countryId","in":"path"},{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"default":{"description":"a page filled with states","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.maxxton.address.domain.State"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}},"/api/v1/addresses/countries":{"get":{"controller":{"$ref":"#/components/CountryController"},"method":{"$ref":"#/components/CountryController/methods/getCountries(Specifications,Pageable)"},"description":"Get all countries","operationId":"getCountries","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"default":{"description":"a page filled with countries","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.maxxton.address.domain.Country"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}},"/api/v1/addresses/current":{"get":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/getCurrentAddressByManager(Long)"},"description":"Find the current (has no end date) address for a given manager ID","operationId":"getCurrentAddressByManager","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"The id of the manager","required":true,"name":"manager","in":"query"}],"responses":{"default":{"description":"The current address of a given manager id","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}}},"delete":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/deleteAddressByManager(Long)"},"description":"Delete the current (has no end date) address for a given manager id","operationId":"deleteAddressByManager","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the manager","required":true,"name":"manager","in":"query"}],"responses":{}},"put":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/updateAddressByManager(Long,Address)"},"description":"Update the current (has no end date) address for a given manager Id","operationId":"updateAddressByManager","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the manager","required":true,"name":"manager","in":"query"},{"name":"address","in":"body","description":"  the new current address value","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}],"responses":{"default":{"description":"the updated address object","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}}}},"/api/v1/addresses/countries/{countryId}/states/{stateId}":{"get":{"controller":{"$ref":"#/components/StateController"},"method":{"$ref":"#/components/StateController/methods/getState(Long)"},"description":"Get a single state","operationId":"getState","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the identifier of the state","required":true,"name":"stateId","in":"path"}],"responses":{"default":{"description":"a single state or null","schema":{"$ref":"#/definitions/com.maxxton.address.domain.State"}}}}},"/api/v1/bankaccounts/types":{"post":{"controller":{"$ref":"#/components/BankAccountTypeController"},"method":{"$ref":"#/components/BankAccountTypeController/methods/createBankAccountType(BankAccountType)"},"description":"Create a new bank account","operationId":"createBankAccountType","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"bankAccountType","in":"body","description":"contents of the new bank account type","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}}],"responses":{"default":{"description":"a newly created bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}}}},"get":{"controller":{"$ref":"#/components/BankAccountTypeController"},"method":{"$ref":"#/components/BankAccountTypeController/methods/getBankAccountTypes(Specifications,Pageable)"},"description":"Get all BankAccountTypes","operationId":"getBankAccountTypes","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"default":{"description":"a page of","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}},"/api/v1/addresses/{addressId}":{"get":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/getAddress(Long)"},"description":"Find a single address by a given id","operationId":"getAddress","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"The id of the address","required":true,"name":"addressId","in":"path"}],"responses":{"default":{"description":"An address if the id is found","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}}},"delete":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/deleteAddress(Long)"},"description":"Delete an existing address by id","operationId":"deleteAddress","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the address you want to delete","required":true,"name":"addressId","in":"path"}],"responses":{}},"put":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/updateAddress(Long,Address)"},"description":"Update an existing address","operationId":"updateAddress","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the address to update","required":true,"name":"addressId","in":"path"},{"name":"address","in":"body","description":"  the new address value","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}],"responses":{"default":{"description":"the updated address object","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}}}},"/api/v1/addresses/countries/{countryId}":{"get":{"controller":{"$ref":"#/components/CountryController"},"method":{"$ref":"#/components/CountryController/methods/getCountry(Long)"},"description":"Get a single country","operationId":"getCountry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the identifier of the country","required":true,"name":"countryId","in":"path"}],"responses":{"default":{"description":"a single country or null","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Country"}}}}},"/api/v1/addresses":{"post":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/createAddress(Address)"},"description":"Creates a new address","operationId":"createAddress","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"newAddress","in":"body","description":"The address as JSON in the request body","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}],"responses":{"default":{"description":"returns the newly created address.","schema":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}}}},"get":{"controller":{"$ref":"#/components/AddressController"},"method":{"$ref":"#/components/AddressController/methods/getAddresses(Specifications,Pageable)"},"description":"Find all addresses (optionally filtered)","operationId":"getAddresses","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"page number","name":"page","in":"query","default":0},{"type":"integer","description":"items per page","name":"size","in":"query","default":20},{"type":"string","description":"sort option","name":"sort","in":"query","default":"asc"}],"responses":{"default":{"description":"A page filled with all addresses, optionally linked to a manager id","schema":{"type":"object","properties":{"number":{"type":"number","default":1},"last":{"type":"boolean","default":false},"size":{"type":"number","default":20},"numberOfElements":{"type":"number","default":20},"totalPages":{"type":"number","default":20},"sort":{},"content":{"type":"array","items":{"$ref":"#/definitions/com.maxxton.address.domain.Address"}},"first":{"type":"boolean","default":true},"totalElements":{"type":"number","default":196}}}}}}},"/api/v1/bankaccounts/types/{bankAccountTypeId}":{"get":{"controller":{"$ref":"#/components/BankAccountTypeController"},"method":{"$ref":"#/components/BankAccountTypeController/methods/getBankAccountType(Long)"},"description":"Get a single BankAccountType by countryId and bankAccountTypeId","operationId":"getBankAccountType","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the identifier of the bankAccountType","required":true,"name":"bankAccountTypeId","in":"path"}],"responses":{"default":{"description":"a single BankAccountType or null","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}}}},"delete":{"controller":{"$ref":"#/components/BankAccountTypeController"},"method":{"$ref":"#/components/BankAccountTypeController/methods/deleteBankAccountType(Long)"},"description":"Delete an existing bank account","operationId":"deleteBankAccountType","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the bank account","required":true,"name":"bankAccountTypeId","in":"path"}],"responses":{}},"put":{"controller":{"$ref":"#/components/BankAccountTypeController"},"method":{"$ref":"#/components/BankAccountTypeController/methods/updateBankAccountType(Long,BankAccountType)"},"description":"Update an existing bank account","operationId":"updateBankAccountType","consumes":["application/json"],"produces":["application/json"],"parameters":[{"type":"integer","description":"the id of the bank account type","required":true,"name":"bankAccountTypeId","in":"path"},{"name":"bankAccountType","in":"body","description":"  new contents of the bank account type","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}}],"responses":{"default":{"description":"an updated bank account","schema":{"$ref":"#/definitions/com.maxxton.address.domain.BankAccountType"}}}}}},"definitions":{"com.maxxton.address.domain.translation.I18nCountry":{"type":"object","description":"Maxxton Group 2016","mappings":{"relational":{"tables":["I18N_COUNTRY"]}},"properties":{"i18nCountryId":{"type":"integer","mappings":{"relational":{"name":"i18n_country_id","primary":true}}},"languageId":{"type":"integer","mappings":{"relational":{"name":"language_id"}}},"countryId":{"type":"integer","mappings":{"relational":{"name":"country_id"}}},"longName":{"type":"string","mappings":{"relational":{"name":"long_name"}}}},"name":"I18nCountry"},"com.maxxton.address.domain.Country":{"type":"object","description":"Maxxton Group 2016","mappings":{"relational":{"tables":["COUNTRY"]}},"properties":{"concernId":{"type":"integer","mappings":{"relational":{"name":"concern_id"}}},"postalCodeNotApplicable":{"type":"boolean","mappings":{"relational":{"name":"postal_code_not_applicable"}}},"cbsSeperateCountry":{"type":"boolean","mappings":{"relational":{"name":"cbs_seperate_country"}}},"i18nDefault":{"type":"array","mappings":{"json":{"ignore":true}},"items":{"$ref":"#/definitions/com.maxxton.address.domain.translation.I18nCountry"}},"defaultLanguageId":{"type":"integer","mappings":{"relational":{"name":"default_language_id"}}},"ibanFormat":{"type":"string","mappings":{"relational":{"name":"iban_format"}}},"cbsCountrygroupId":{"type":"integer","mappings":{"relational":{"name":"cbs_countrygroup_id"}}},"countryId":{"type":"integer","mappings":{"relational":{"name":"country_id","primary":true}}},"i18n":{"type":"array","mappings":{"json":{"ignore":true}},"items":{"$ref":"#/definitions/com.maxxton.address.domain.translation.I18nCountry"}},"validateIban":{"type":"boolean","mappings":{"relational":{"name":"validate_iban"}}},"countryCode":{"type":"string","mappings":{"relational":{"name":"country_code"}}},"countryPriority":{"type":"integer","mappings":{"relational":{"name":"country_priority"}}},"inCbsReports":{"type":"boolean","mappings":{"relational":{"name":"in_cbs_reports"}}},"currencyId":{"type":"integer","mappings":{"relational":{"name":"currency_id"}}},"shortName":{"type":"string","mappings":{"relational":{"name":"short_name"}}},"defaultCountry":{"type":"boolean","mappings":{"relational":{"name":"default_country"}}},"localeId":{"type":"string","mappings":{"relational":{"name":"locale_id"}}},"longName":{"type":"string"}},"name":"Country"},"com.maxxton.address.domain.BankAccount":{"type":"object","description":"Bank Account domain class\n\n Maxxton Group 2016","mappings":{"relational":{"tables":["BANK_ACCOUNT"]}},"properties":{"concernId":{"type":"integer","mappings":{"relational":{"name":"concern_id"}}},"roundOffAccountId":{"type":"integer","mappings":{"relational":{"name":"round_off_account_id"}}},"showChequeNumber":{"type":"boolean","mappings":{"relational":{"name":"show_cheque_number"}}},"accountNumber":{"type":"string","mappings":{"relational":{"name":"account_number"}}},"infoIsObligatory":{"type":"boolean","mappings":{"relational":{"name":"info_is_obligatory"}}},"type":{"type":"string"},"isDistchannelAccount":{"type":"boolean","mappings":{"relational":{"name":"is_distchannel_account"}}},"unassignableAccountId":{"type":"integer","mappings":{"relational":{"name":"unassignable_account_id"}}},"paymentmethodDefinitionId":{"type":"integer","mappings":{"relational":{"name":"paymentmethod_definition_id"}}},"accountId":{"type":"integer","mappings":{"relational":{"name":"account_id"}}},"bankAccountTypeId":{"type":"integer","mappings":{"relational":{"name":"bank_account_type_id"}}},"bankAccountId":{"type":"integer","mappings":{"relational":{"name":"bank_account_id","primary":true}}},"iban":{"type":"string"},"currencyId":{"type":"integer","mappings":{"relational":{"name":"currency_id"}}},"ignoreStatementNumber":{"type":"boolean","mappings":{"relational":{"name":"ignore_statement_number"}}},"isNumberedAnnual":{"type":"integer","mappings":{"relational":{"name":"is_numbered_annual"}}}},"name":"BankAccount"},"com.maxxton.address.domain.BankAccountType":{"type":"object","description":"BankAccountType entity\n\n Maxxton Group 2016","mappings":{"relational":{"tables":["BANK_ACCOUNT_TYPE"]}},"properties":{"concernId":{"type":"integer","mappings":{"relational":{"name":"concern_id"}}},"bankAccountTypeId":{"type":"integer","mappings":{"relational":{"name":"bank_account_type_id","primary":true}}},"bankaccountCheckId":{"type":"integer","mappings":{"relational":{"name":"bankaccount_check_id"}}},"accountFormat":{"type":"string","mappings":{"relational":{"name":"account_format"}}},"description":{"type":"string"},"countryId":{"type":"integer","mappings":{"relational":{"name":"country_id"}}}},"name":"BankAccountType"},"com.maxxton.address.domain.translation.I18nState":{"type":"object","description":"Translation class for state domain objects\n\n Maxxton Group 2016","mappings":{"relational":{"tables":["I18N_STATE"]}},"properties":{"i18nStateId":{"type":"integer","mappings":{"relational":{"name":"i18n_state_id","primary":true}}},"stateId":{"type":"integer","mappings":{"relational":{"name":"state_id"}}},"languageId":{"type":"integer","mappings":{"relational":{"name":"language_id"}}},"name":{"type":"string"},"description":{"type":"string"}},"name":"I18nState"},"com.maxxton.address.domain.Address":{"type":"object","description":"Domain for the Address table\n\n Maxxton Group 2016","mappings":{"relational":{"tables":["ADDRESS"]}},"properties":{"poBoxCity":{"type":"string","mappings":{"relational":{"name":"po_box_city"}}},"city":{"type":"string"},"postreturn":{"type":"boolean"},"sendDate":{"type":"date","mappings":{"relational":{"name":"send_date"}}},"latitude":{"type":"number"},"mobilePhone2":{"type":"string","mappings":{"relational":{"name":"mobile_phone_2"}}},"modifiedByEmpId":{"type":"integer","mappings":{"relational":{"name":"modified_by_emp_id"}}},"dateEnd":{"type":"date","mappings":{"relational":{"name":"date_end"}}},"doubleId":{"type":"integer","mappings":{"relational":{"name":"double_id"}}},"error":{"type":"boolean"},"boxnumber":{"type":"string"},"countryId":{"type":"integer","mappings":{"relational":{"name":"country_id"}}},"errormsg":{"type":"string"},"addressId":{"type":"integer","mappings":{"relational":{"name":"address_id","primary":true}}},"dateBegin":{"type":"date","mappings":{"relational":{"name":"date_begin"}}},"valid":{"type":"boolean"},"poBox":{"type":"string","mappings":{"relational":{"name":"po_box"}}},"housenumberSuffix":{"type":"string","mappings":{"relational":{"name":"housenumber_suffix"}}},"fixStatus":{"type":"string","mappings":{"relational":{"name":"fix_status"}}},"beaconMajorId":{"type":"string","mappings":{"relational":{"name":"beacon_major_id"}}},"bounces":{"type":"integer"},"fax":{"type":"string"},"email":{"type":"string"},"longitude":{"type":"number"},"poBoxZipcode":{"type":"string","mappings":{"relational":{"name":"po_box_zipcode"}}},"address3":{"type":"string"},"checkedDate":{"type":"date","mappings":{"relational":{"name":"checked_date"}}},"address2":{"type":"string"},"beaconMinorId":{"type":"string","mappings":{"relational":{"name":"beacon_minor_id"}}},"address1":{"type":"string"},"expF":{"type":"boolean","mappings":{"relational":{"name":"exp_f"}}},"stateId":{"type":"integer","mappings":{"relational":{"name":"state_id"}}},"expC":{"type":"boolean","mappings":{"relational":{"name":"exp_c"}}},"managerId":{"type":"integer","mappings":{"relational":{"name":"manager_id"}}},"exposeLocation":{"type":"integer","mappings":{"relational":{"name":"expose_location"}}},"zipcode":{"type":"string"},"mobilePhone":{"type":"string","mappings":{"relational":{"name":"mobile_phone"}}},"housenumber":{"type":"string"},"district":{"type":"string"},"privatePhone":{"type":"string","mappings":{"relational":{"name":"private_phone"}}},"workPhone":{"type":"string","mappings":{"relational":{"name":"work_phone"}}},"altContactPerson":{"type":"string","mappings":{"relational":{"name":"alt_contact_person"}}}},"name":"Address"},"com.maxxton.address.domain.State":{"type":"object","description":"Domain class for country states.\n\n Maxxton Group 2016","mappings":{"relational":{"tables":["STATE"]}},"properties":{"i18nDefault":{"type":"array","mappings":{"json":{"ignore":true}},"items":{"$ref":"#/definitions/com.maxxton.address.domain.translation.I18nState"}},"code":{"type":"string"},"stateId":{"type":"integer","mappings":{"relational":{"name":"state_id","primary":true}}},"name":{"type":"string"},"description":{"type":"string"},"countryId":{"type":"integer","mappings":{"relational":{"name":"country_id"}}},"i18n":{"type":"array","mappings":{"json":{"ignore":true}},"items":{"$ref":"#/definitions/com.maxxton.address.domain.translation.I18nState"}}},"name":"State"}},"components":{"StateRepository":{"name":"com.maxxton.address.repository.StateRepository","type":"repository","file":"com/maxxton/address/repository/StateRepository.java","description":"Repository for the State table\n\n Maxxton Group 2016","authors":["Sonke (r.sonke@maxxton.com)"],"annotations":{"Repository":{}}},"BankAccountTypeController":{"name":"com.maxxton.address.controller.BankAccountTypeController","type":"controller","file":"com/maxxton/address/controller/BankAccountTypeController.java","description":"BankAccountType Controller\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"value":"\"/api/v1/bankaccounts/types\""}}},"methods":{"createBankAccountType(BankAccountType)":{"name":"createBankAccountType","description":"Create a new bank account","parameters":["BankAccountType"],"lineNumber":64},"updateBankAccountType(Long,BankAccountType)":{"name":"updateBankAccountType","description":"Update an existing bank account","parameters":["Long","BankAccountType"],"lineNumber":77},"getBankAccountTypes(Specifications,Pageable)":{"name":"getBankAccountTypes","description":"Get all BankAccountTypes","parameters":["Specifications","Pageable"],"lineNumber":52},"getBankAccountType(Long)":{"name":"getBankAccountType","description":"Get a single BankAccountType by countryId and bankAccountTypeId","parameters":["Long"],"lineNumber":39},"deleteBankAccountType(Long)":{"name":"deleteBankAccountType","description":"Delete an existing bank account","parameters":["Long"],"lineNumber":88}}},"CountryService":{"name":"com.maxxton.address.service.CountryService","type":"service","file":"com/maxxton/address/service/CountryService.java","description":"Country service\n\n Maxxton Group 2016","authors":["(c.vaes@maxxton.com)"],"annotations":{"Service":{}},"methods":{"getCountry(Long)":{"name":"getCountry","description":"Gets a single country","parameters":["Long"],"lineNumber":32},"getAllCountries(Specifications,Pageable)":{"name":"getAllCountries","description":"Get all countries","parameters":["Specifications","Pageable"],"lineNumber":44}}},"StateService":{"name":"com.maxxton.address.service.StateService","type":"service","file":"com/maxxton/address/service/StateService.java","description":"State service\n\n Maxxton Group 2016","authors":["Sonke (r.sonke@maxxton.com)"],"annotations":{"Service":{}},"methods":{"getAllStatesByCountry(Long,Pageable)":{"name":"getAllStatesByCountry","description":"Get all states by country","parameters":["Long","Pageable"],"lineNumber":46},"getState(Long)":{"name":"getState","description":"Gets a single state","parameters":["Long"],"lineNumber":34}}},"BankAccountController":{"name":"com.maxxton.address.controller.BankAccountController","type":"controller","file":"com/maxxton/address/controller/BankAccountController.java","description":"Bank Account Controller\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"path":"\"/api/v1/bankaccounts\""}}},"methods":{"getBankAccounts(Specifications,Pageable)":{"name":"getBankAccounts","description":"Get all bank accounts","parameters":["Specifications","Pageable"],"lineNumber":52},"updateBankAccount(Long,BankAccount)":{"name":"updateBankAccount","description":"Update an existing bank account","parameters":["Long","BankAccount"],"lineNumber":77},"deleteBankAccount(Long)":{"name":"deleteBankAccount","description":"Delete an existing bank account","parameters":["Long"],"lineNumber":88},"getBankAccount(Long)":{"name":"getBankAccount","description":"Get a single bank account","parameters":["Long"],"lineNumber":39},"createBankAccount(BankAccount)":{"name":"createBankAccount","description":"Create a new bank account","parameters":["BankAccount"],"lineNumber":64}}},"BankAccountTypeService":{"name":"com.maxxton.address.service.BankAccountTypeService","type":"service","file":"com/maxxton/address/service/BankAccountTypeService.java","description":"BankAccountType service\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Service":{}},"methods":{"createBankAccountType(BankAccountType)":{"name":"createBankAccountType","description":"Create a new bank account","parameters":["BankAccountType"],"lineNumber":52},"updateBankAccountType(Long,BankAccountType)":{"name":"updateBankAccountType","description":"Update an existing bank account","parameters":["Long","BankAccountType"],"lineNumber":63},"getBankAccountTypes(Specifications,Pageable)":{"name":"getBankAccountTypes","description":"Get all BankAccountTypes","parameters":["Specifications","Pageable"],"lineNumber":42},"getBankAccountType(Long)":{"name":"getBankAccountType","description":"Get a single BankAccountType by countryId and bankAccountTypeId","parameters":["Long"],"lineNumber":31},"deleteBankAccountType(Long)":{"name":"deleteBankAccountType","description":"Delete an existing bank account","parameters":["Long"],"lineNumber":77}}},"AddressSecurityConfig":{"name":"com.maxxton.address.config.AddressSecurityConfig","type":"configuration","file":"com/maxxton/address/config/AddressSecurityConfig.java","description":"Configuration for securing the service and overrides the security config of the jpa lib.\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Order":{"properties":{"value":"-2"}},"Configuration":{"properties":{"value":"\"addressSecurityConfig\""}},"EnableGlobalMethodSecurity":{"properties":{"securedEnabled":"true"}}},"methods":{"configure(HttpSecurity)":{"name":"configure","description":"","parameters":["HttpSecurity"],"lineNumber":22}}},"AddressController":{"name":"com.maxxton.address.controller.AddressController","type":"controller","file":"com/maxxton/address/controller/AddressController.java","description":"Address (REST) Controller\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"value":"\"/api/v1/addresses\""}}},"methods":{"updateAddressByManager(Long,Address)":{"name":"updateAddressByManager","description":"Update the current (has no end date) address for a given manager Id","parameters":["Long","Address"],"lineNumber":103},"deleteAddressByManager(Long)":{"name":"deleteAddressByManager","description":"Delete the current (has no end date) address for a given manager id","parameters":["Long"],"lineNumber":125},"deleteAddress(Long)":{"name":"deleteAddress","description":"Delete an existing address by id","parameters":["Long"],"lineNumber":114},"updateAddress(Long,Address)":{"name":"updateAddress","description":"Update an existing address","parameters":["Long","Address"],"lineNumber":90},"createAddress(Address)":{"name":"createAddress","description":"Creates a new address","parameters":["Address"],"lineNumber":77},"getCurrentAddressByManager(Long)":{"name":"getCurrentAddressByManager","description":"Find the current (has no end date) address for a given manager ID","parameters":["Long"],"lineNumber":65},"getAddress(Long)":{"name":"getAddress","description":"Find a single address by a given id","parameters":["Long"],"lineNumber":40},"getAddresses(Specifications,Pageable)":{"name":"getAddresses","description":"Find all addresses (optionally filtered)","parameters":["Specifications","Pageable"],"lineNumber":53}}},"CountryRepository":{"name":"com.maxxton.address.repository.CountryRepository","type":"repository","file":"com/maxxton/address/repository/CountryRepository.java","description":"Repository for the Country table\n\n Maxxton Group 2016","authors":["(c.vaes@maxxton.com)"],"annotations":{"Repository":{}}},"AddressService":{"name":"com.maxxton.address.service.AddressService","type":"service","file":"com/maxxton/address/service/AddressService.java","description":"Address service\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Service":{}},"methods":{"getAddressByManger(Long)":{"name":"getAddressByManger","description":"Get the current (has no end date) address for a manager id","parameters":["Long"],"lineNumber":41},"updateAddressByManager(Long,Address)":{"name":"updateAddressByManager","description":"Updates the current (has no end date) address for a given manager id","parameters":["Long","Address"],"lineNumber":89},"deleteAddressByManager(Long)":{"name":"deleteAddressByManager","description":"Delete the current (has no end date) address for a given manager id","parameters":["Long"],"lineNumber":114},"deleteAddress(Long)":{"name":"deleteAddress","description":"Delete an address by a given id.","parameters":["Long"],"lineNumber":103},"updateAddress(Long,Address)":{"name":"updateAddress","description":"Updates an existing address","parameters":["Long","Address"],"lineNumber":74},"createAddress(Address)":{"name":"createAddress","description":"Creates a new address","parameters":["Address"],"lineNumber":62},"getAddress(Long)":{"name":"getAddress","description":"Get a single address by it's id.","parameters":["Long"],"lineNumber":31},"getAddresses(Specifications,Pageable)":{"name":"getAddresses","description":"Gets all address for a given manager id","parameters":["Specifications","Pageable"],"lineNumber":52}}},"BankAccountService":{"name":"com.maxxton.address.service.BankAccountService","type":"service","file":"com/maxxton/address/service/BankAccountService.java","description":"Bank Account Service\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Service":{}},"methods":{"getBankAccounts(Specifications,Pageable)":{"name":"getBankAccounts","description":"Get all bank accounts","parameters":["Specifications","Pageable"],"lineNumber":42},"updateBankAccount(Long,BankAccount)":{"name":"updateBankAccount","description":"Update an existing bank account","parameters":["Long","BankAccount"],"lineNumber":64},"deleteBankAccount(Long)":{"name":"deleteBankAccount","description":"Delete an existing bank account","parameters":["Long"],"lineNumber":78},"getBankAccount(Long)":{"name":"getBankAccount","description":"Get a single bank account","parameters":["Long"],"lineNumber":31},"createBankAccount(BankAccount)":{"name":"createBankAccount","description":"Create a new bank account","parameters":["BankAccount"],"lineNumber":52}}},"AddressRepository":{"name":"com.maxxton.address.repository.AddressRepository","type":"repository","file":"com/maxxton/address/repository/AddressRepository.java","description":"Repository for the Address table\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Repository":{}},"methods":{"getCurrentAddressByManager(Long)":{"name":"getCurrentAddressByManager","description":"Select the current (has no end date) address by manager Id","parameters":["Long"],"lineNumber":27}}},"CountryController":{"name":"com.maxxton.address.controller.CountryController","type":"controller","file":"com/maxxton/address/controller/CountryController.java","description":"Country (REST) Controller\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"value":"\"/api/v1/addresses/countries\""}}},"methods":{"getCountry(Long)":{"name":"getCountry","description":"Get a single country","parameters":["Long"],"lineNumber":38},"getCountries(Specifications,Pageable)":{"name":"getCountries","description":"Get all countries","parameters":["Specifications","Pageable"],"lineNumber":51}}},"BankAccountTypeRepository":{"name":"com.maxxton.address.repository.BankAccountTypeRepository","type":"repository","file":"com/maxxton/address/repository/BankAccountTypeRepository.java","description":"BankAccountType repository\n\n Maxxton Group 2016","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"Repository":{}}},"StateController":{"name":"com.maxxton.address.controller.StateController","type":"controller","file":"com/maxxton/address/controller/StateController.java","description":"State (REST) Controller\n\n Maxxton Group 2016","authors":["Sonke (r.sonke@maxxton.com)"],"annotations":{"RestController":{},"RequestMapping":{"properties":{"value":"\"/api/v1/addresses/countries/{countryId}/states\""}}},"methods":{"getStatesByCountry(Long,Pageable)":{"name":"getStatesByCountry","description":"Get all countries","parameters":["Long","Pageable"],"lineNumber":50},"getState(Long)":{"name":"getState","description":"Get a single state","parameters":["Long"],"lineNumber":37}}},"AddressServiceApplication":{"name":"com.maxxton.address.AddressServiceApplication","type":"application","file":"com/maxxton/address/AddressServiceApplication.java","description":"This Microservice owns all the Addresses","authors":["Hermans (r.hermans@maxxton.com)"],"annotations":{"SpringBootApplication":{},"EnableMultiConcern":{},"EnableCaching":{},"EnableCircuitBreaker":{},"EnableDiscoveryClient":{},"EnableMaxxtonTools":{},"EnableResourceServer":{}},"methods":{"initApplication()":{"name":"initApplication","description":"Initializes application. <p> Spring profiles can be configured with a program arguments --spring.profiles.active=your-active-profile","lineNumber":52}}}}}