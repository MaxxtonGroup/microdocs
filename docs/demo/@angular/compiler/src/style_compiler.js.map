{"version":3,"file":"style_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/style_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, ViewEncapsulation} from '@angular/core';\n\nimport {isPresent} from '../src/facade/lang';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileStylesheetMetadata} from './compile_metadata';\nimport * as o from './output/output_ast';\nimport {ShadowCss} from './shadow_css';\nimport {extractStyleUrls} from './style_url_resolver';\nimport {UrlResolver} from './url_resolver';\n\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = /*@ts2dart_const*/ `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = /*@ts2dart_const*/ `_ngcontent-${COMPONENT_VARIABLE}`;\n\nexport class StylesCompileDependency {\n  constructor(\n      public moduleUrl: string, public isShimmed: boolean,\n      public valuePlaceholder: CompileIdentifierMetadata) {}\n}\n\nexport class StylesCompileResult {\n  constructor(\n      public componentStylesheet: CompiledStylesheet,\n      public externalStylesheets: CompiledStylesheet[]) {}\n}\n\nexport class CompiledStylesheet {\n  constructor(\n      public statements: o.Statement[], public stylesVar: string,\n      public dependencies: StylesCompileDependency[], public isShimmed: boolean,\n      public meta: CompileStylesheetMetadata) {}\n}\nexport class StyleCompiler {\n  private _shadowCss: ShadowCss = new ShadowCss();\n\n  constructor(private _urlResolver: UrlResolver) {}\n\n  compileComponent(comp: CompileDirectiveMetadata): StylesCompileResult {\n    var shim = comp.template.encapsulation === ViewEncapsulation.Emulated;\n    var externalStylesheets: CompiledStylesheet[] = [];\n    var componentStylesheet: CompiledStylesheet = this._compileStyles(\n        comp, new CompileStylesheetMetadata({\n          styles: comp.template.styles,\n          styleUrls: comp.template.styleUrls,\n          moduleUrl: comp.type.moduleUrl\n        }),\n        true);\n    comp.template.externalStylesheets.forEach((stylesheetMeta) => {\n      var compiledStylesheet = this._compileStyles(comp, stylesheetMeta, false);\n      externalStylesheets.push(compiledStylesheet);\n    });\n    return new StylesCompileResult(componentStylesheet, externalStylesheets);\n  }\n\n  private _compileStyles(\n      comp: CompileDirectiveMetadata, stylesheet: CompileStylesheetMetadata,\n      isComponentStylesheet: boolean): CompiledStylesheet {\n    var shim = comp.template.encapsulation === ViewEncapsulation.Emulated;\n    var styleExpressions =\n        stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n    var dependencies: StylesCompileDependency[] = [];\n    for (var i = 0; i < stylesheet.styleUrls.length; i++) {\n      var identifier = new CompileIdentifierMetadata({name: getStylesVarName(null)});\n      dependencies.push(new StylesCompileDependency(stylesheet.styleUrls[i], shim, identifier));\n      styleExpressions.push(new o.ExternalExpr(identifier));\n    }\n    // styles variable contains plain strings and arrays of other styles arrays (recursive),\n    // so we set its type to dynamic.\n    var stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n    var stmt = o.variable(stylesVar)\n                   .set(o.literalArr(\n                       styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n                   .toDeclStmt(null, [o.StmtModifier.Final]);\n    return new CompiledStylesheet([stmt], stylesVar, dependencies, shim, stylesheet);\n  }\n\n  private _shimIfNeeded(style: string, shim: boolean): string {\n    return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: UrlResolver, },\n];\n}\n\nfunction getStylesVarName(component: CompileDirectiveMetadata): string {\n  var result = `styles`;\n  if (component) {\n    result += `_${component.type.name}`;\n  }\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}