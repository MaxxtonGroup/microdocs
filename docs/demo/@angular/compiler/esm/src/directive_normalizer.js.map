{"version":3,"file":"directive_normalizer.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/directive_normalizer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, ViewEncapsulation} from '@angular/core';\n\nimport {PromiseWrapper} from '../src/facade/async';\nimport {MapWrapper} from '../src/facade/collection';\nimport {BaseException} from '../src/facade/exceptions';\nimport {isBlank, isPresent} from '../src/facade/lang';\n\nimport {CompileDirectiveMetadata, CompileStylesheetMetadata, CompileTemplateMetadata, CompileTypeMetadata} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {HtmlAstVisitor, HtmlAttrAst, HtmlCommentAst, HtmlElementAst, HtmlExpansionAst, HtmlExpansionCaseAst, HtmlTextAst, htmlVisitAll} from './html_ast';\nimport {HtmlParser} from './html_parser';\nimport {extractStyleUrls, isStyleUrlResolvable} from './style_url_resolver';\nimport {PreparsedElementType, preparseElement} from './template_preparser';\nimport {UrlResolver} from './url_resolver';\nimport {XHR} from './xhr';\n\nexport class NormalizeDirectiveResult {\n  constructor(\n      public syncResult: CompileDirectiveMetadata,\n      public asyncResult: Promise<CompileDirectiveMetadata>) {}\n}\nexport class DirectiveNormalizer {\n  private _xhrCache = new Map<string, Promise<string>>();\n\n  constructor(\n      private _xhr: XHR, private _urlResolver: UrlResolver, private _htmlParser: HtmlParser,\n      private _config: CompilerConfig) {}\n\n  clearCache() { this._xhrCache.clear(); }\n\n  clearCacheFor(normalizedDirective: CompileDirectiveMetadata) {\n    if (!normalizedDirective.isComponent) {\n      return;\n    }\n    this._xhrCache.delete(normalizedDirective.template.templateUrl);\n    normalizedDirective.template.externalStylesheets.forEach(\n        (stylesheet) => { this._xhrCache.delete(stylesheet.moduleUrl); });\n  }\n\n  private _fetch(url: string): Promise<string> {\n    var result = this._xhrCache.get(url);\n    if (!result) {\n      result = this._xhr.get(url);\n      this._xhrCache.set(url, result);\n    }\n    return result;\n  }\n\n  normalizeDirective(directive: CompileDirectiveMetadata): NormalizeDirectiveResult {\n    if (!directive.isComponent) {\n      // For non components there is nothing to be normalized yet.\n      return new NormalizeDirectiveResult(directive, Promise.resolve(directive));\n    }\n    let normalizedTemplateSync: CompileTemplateMetadata = null;\n    let normalizedTemplateAsync: Promise<CompileTemplateMetadata>;\n    if (isPresent(directive.template.template)) {\n      normalizedTemplateSync = this.normalizeTemplateSync(directive.type, directive.template);\n      normalizedTemplateAsync = Promise.resolve(normalizedTemplateSync);\n    } else if (directive.template.templateUrl) {\n      normalizedTemplateAsync = this.normalizeTemplateAsync(directive.type, directive.template);\n    } else {\n      throw new BaseException(`No template specified for component ${directive.type.name}`);\n    }\n    if (normalizedTemplateSync && normalizedTemplateSync.styleUrls.length === 0) {\n      // sync case\n      let normalizedDirective = _cloneDirectiveWithTemplate(directive, normalizedTemplateSync);\n      return new NormalizeDirectiveResult(\n          normalizedDirective, Promise.resolve(normalizedDirective));\n    } else {\n      // async case\n      return new NormalizeDirectiveResult(\n          null,\n          normalizedTemplateAsync\n              .then((normalizedTemplate) => this.normalizeExternalStylesheets(normalizedTemplate))\n              .then(\n                  (normalizedTemplate) =>\n                      _cloneDirectiveWithTemplate(directive, normalizedTemplate)));\n    }\n  }\n\n  normalizeTemplateSync(directiveType: CompileTypeMetadata, template: CompileTemplateMetadata):\n      CompileTemplateMetadata {\n    return this.normalizeLoadedTemplate(\n        directiveType, template, template.template, directiveType.moduleUrl);\n  }\n\n  normalizeTemplateAsync(directiveType: CompileTypeMetadata, template: CompileTemplateMetadata):\n      Promise<CompileTemplateMetadata> {\n    let templateUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);\n    return this._fetch(templateUrl)\n        .then((value) => this.normalizeLoadedTemplate(directiveType, template, value, templateUrl));\n  }\n\n  normalizeLoadedTemplate(\n      directiveType: CompileTypeMetadata, templateMeta: CompileTemplateMetadata, template: string,\n      templateAbsUrl: string): CompileTemplateMetadata {\n    var rootNodesAndErrors = this._htmlParser.parse(template, directiveType.name);\n    if (rootNodesAndErrors.errors.length > 0) {\n      var errorString = rootNodesAndErrors.errors.join('\\n');\n      throw new BaseException(`Template parse errors:\\n${errorString}`);\n    }\n    var templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n      styles: templateMeta.styles,\n      styleUrls: templateMeta.styleUrls,\n      moduleUrl: directiveType.moduleUrl\n    }));\n\n    var visitor = new TemplatePreparseVisitor();\n    htmlVisitAll(visitor, rootNodesAndErrors.rootNodes);\n    var templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata(\n        {styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl}));\n\n    var allStyles = templateMetadataStyles.styles.concat(templateStyles.styles);\n    var allStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n\n    var encapsulation = templateMeta.encapsulation;\n    if (isBlank(encapsulation)) {\n      encapsulation = this._config.defaultEncapsulation;\n    }\n    if (encapsulation === ViewEncapsulation.Emulated && allStyles.length === 0 &&\n        allStyleUrls.length === 0) {\n      encapsulation = ViewEncapsulation.None;\n    }\n    return new CompileTemplateMetadata({\n      encapsulation: encapsulation,\n      template: template,\n      templateUrl: templateAbsUrl,\n      styles: allStyles,\n      styleUrls: allStyleUrls,\n      externalStylesheets: templateMeta.externalStylesheets,\n      ngContentSelectors: visitor.ngContentSelectors,\n      animations: templateMeta.animations,\n      interpolation: templateMeta.interpolation\n    });\n  }\n\n  normalizeExternalStylesheets(templateMeta: CompileTemplateMetadata):\n      Promise<CompileTemplateMetadata> {\n    return this._loadMissingExternalStylesheets(templateMeta.styleUrls)\n        .then((externalStylesheets) => new CompileTemplateMetadata({\n                encapsulation: templateMeta.encapsulation,\n                template: templateMeta.template,\n                templateUrl: templateMeta.templateUrl,\n                styles: templateMeta.styles,\n                styleUrls: templateMeta.styleUrls,\n                externalStylesheets: externalStylesheets,\n                ngContentSelectors: templateMeta.ngContentSelectors,\n                animations: templateMeta.animations,\n                interpolation: templateMeta.interpolation\n              }));\n  }\n\n  private _loadMissingExternalStylesheets(\n      styleUrls: string[],\n      loadedStylesheets:\n          Map<string, CompileStylesheetMetadata> = new Map<string, CompileStylesheetMetadata>()):\n      Promise<CompileStylesheetMetadata[]> {\n    return Promise\n        .all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n                 .map(styleUrl => this._fetch(styleUrl).then((loadedStyle) => {\n                   var stylesheet = this.normalizeStylesheet(\n                       new CompileStylesheetMetadata({styles: [loadedStyle], moduleUrl: styleUrl}));\n                   loadedStylesheets.set(styleUrl, stylesheet);\n                   return this._loadMissingExternalStylesheets(\n                       stylesheet.styleUrls, loadedStylesheets);\n                 })))\n        .then((_) => MapWrapper.values(loadedStylesheets));\n  }\n\n  normalizeStylesheet(stylesheet: CompileStylesheetMetadata): CompileStylesheetMetadata {\n    var allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n                           .map(url => this._urlResolver.resolve(stylesheet.moduleUrl, url));\n\n    var allStyles = stylesheet.styles.map(style => {\n      var styleWithImports = extractStyleUrls(this._urlResolver, stylesheet.moduleUrl, style);\n      allStyleUrls.push(...styleWithImports.styleUrls);\n      return styleWithImports.style;\n    });\n\n    return new CompileStylesheetMetadata(\n        {styles: allStyles, styleUrls: allStyleUrls, moduleUrl: stylesheet.moduleUrl});\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: XHR, },\n{type: UrlResolver, },\n{type: HtmlParser, },\n{type: CompilerConfig, },\n];\n}\n\nclass TemplatePreparseVisitor implements HtmlAstVisitor {\n  ngContentSelectors: string[] = [];\n  styles: string[] = [];\n  styleUrls: string[] = [];\n  ngNonBindableStackCount: number = 0;\n\n  visitElement(ast: HtmlElementAst, context: any): any {\n    var preparsedElement = preparseElement(ast);\n    switch (preparsedElement.type) {\n      case PreparsedElementType.NG_CONTENT:\n        if (this.ngNonBindableStackCount === 0) {\n          this.ngContentSelectors.push(preparsedElement.selectAttr);\n        }\n        break;\n      case PreparsedElementType.STYLE:\n        var textContent = '';\n        ast.children.forEach(child => {\n          if (child instanceof HtmlTextAst) {\n            textContent += (<HtmlTextAst>child).value;\n          }\n        });\n        this.styles.push(textContent);\n        break;\n      case PreparsedElementType.STYLESHEET:\n        this.styleUrls.push(preparsedElement.hrefAttr);\n        break;\n      default:\n        // DDC reports this as error. See:\n        // https://github.com/dart-lang/dev_compiler/issues/428\n        break;\n    }\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount++;\n    }\n    htmlVisitAll(this, ast.children);\n    if (preparsedElement.nonBindable) {\n      this.ngNonBindableStackCount--;\n    }\n    return null;\n  }\n  visitComment(ast: HtmlCommentAst, context: any): any { return null; }\n  visitAttr(ast: HtmlAttrAst, context: any): any { return null; }\n  visitText(ast: HtmlTextAst, context: any): any { return null; }\n  visitExpansion(ast: HtmlExpansionAst, context: any): any { return null; }\n\n  visitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any { return null; }\n}\n\nfunction _cloneDirectiveWithTemplate(\n    directive: CompileDirectiveMetadata,\n    template: CompileTemplateMetadata): CompileDirectiveMetadata {\n  return new CompileDirectiveMetadata({\n    type: directive.type,\n    isComponent: directive.isComponent,\n    selector: directive.selector,\n    exportAs: directive.exportAs,\n    changeDetection: directive.changeDetection,\n    inputs: directive.inputs,\n    outputs: directive.outputs,\n    hostListeners: directive.hostListeners,\n    hostProperties: directive.hostProperties,\n    hostAttributes: directive.hostAttributes,\n    lifecycleHooks: directive.lifecycleHooks,\n    providers: directive.providers,\n    viewProviders: directive.viewProviders,\n    queries: directive.queries,\n    viewQueries: directive.viewQueries,\n    precompile: directive.precompile,\n    template: template\n  });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}