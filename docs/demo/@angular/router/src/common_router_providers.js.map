{"version":3,"file":"common_router_providers.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/common_router_providers.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationRef, ComponentResolver, Injector, OpaqueToken} from '@angular/core';\n\nimport {RouterConfig} from './config';\nimport {Router} from './router';\nimport {RouterOutletMap} from './router_outlet_map';\nimport {ActivatedRoute} from './router_state';\nimport {DefaultUrlSerializer, UrlSerializer} from './url_tree';\n\nexport const ROUTER_CONFIG = new OpaqueToken('ROUTER_CONFIG');\nexport const ROUTER_OPTIONS = new OpaqueToken('ROUTER_OPTIONS');\n\n/**\n * @experimental\n */\nexport interface ExtraOptions { enableTracing?: boolean; }\n\nexport function setupRouter(\n    ref: ApplicationRef, resolver: ComponentResolver, urlSerializer: UrlSerializer,\n    outletMap: RouterOutletMap, location: Location, injector: Injector, config: RouterConfig,\n    opts: ExtraOptions) {\n  if (ref.componentTypes.length == 0) {\n    throw new Error('Bootstrap at least one component before injecting Router.');\n  }\n  const componentType = ref.componentTypes[0];\n  const r =\n      new Router(componentType, resolver, urlSerializer, outletMap, location, injector, config);\n  ref.registerDisposeListener(() => r.dispose());\n\n  if (opts.enableTracing) {\n    r.events.subscribe(e => {\n      console.group(`Router Event: ${(<any>e.constructor).name}`);\n      console.log(e.toString());\n      console.log(e);\n      console.groupEnd();\n    });\n  }\n\n  return r;\n}\n\nexport function setupRouterInitializer(injector: Injector) {\n  // https://github.com/angular/angular/issues/9101\n  // Delay the router instantiation to avoid circular dependency (ApplicationRef ->\n  // APP_INITIALIZER -> Router)\n  setTimeout(() => {\n    const appRef = injector.get(ApplicationRef);\n    if (appRef.componentTypes.length == 0) {\n      appRef.registerBootstrapListener(() => { injector.get(Router).initialNavigation(); });\n    } else {\n      injector.get(Router).initialNavigation();\n    }\n  }, 0);\n  return (): any => null;\n}\n\n/**\n * An array of {@link Provider}s. To use the router, you must add this to your application.\n *\n * ### Example\n *\n * ```\n * @Component({directives: [ROUTER_DIRECTIVES]})\n * class AppCmp {\n *   // ...\n * }\n *\n * const config = [\n *   {path: 'home', component: Home}\n * ];\n *\n * bootstrap(AppCmp, [provideRouter(config)]);\n * ```\n *\n * @stable\n */\nexport function provideRouter(_config: RouterConfig, _opts: ExtraOptions): any[] {\n  return [\n    {provide: ROUTER_CONFIG, useValue: _config}, {provide: ROUTER_OPTIONS, useValue: _opts},\n    Location, {provide: LocationStrategy, useClass: PathLocationStrategy},\n    {provide: UrlSerializer, useClass: DefaultUrlSerializer},\n\n    {\n      provide: Router,\n      useFactory: setupRouter,\n      deps: [\n        ApplicationRef, ComponentResolver, UrlSerializer, RouterOutletMap, Location, Injector,\n        ROUTER_CONFIG, ROUTER_OPTIONS\n      ]\n    },\n\n    RouterOutletMap,\n    {provide: ActivatedRoute, useFactory: (r: Router) => r.routerState.root, deps: [Router]},\n\n    // Trigger initial navigation\n    {provide: APP_INITIALIZER, multi: true, useFactory: setupRouterInitializer, deps: [Injector]}\n  ];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}