{"version":3,"file":"create_router_state.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/create_router_state.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,gCAA8B,sBAAsB,CAAC,CAAA;AAErD,6BAAuF,gBAAgB,CAAC,CAAA;AACxG,qBAAuB,cAAc,CAAC,CAAA;AAEtC,2BAAkC,IAAyB,EAAE,SAAsB;IACjF,IAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;IAC7E,IAAM,WAAW,GAAG,SAAS,GAAG,SAAS,CAAC,WAAW,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9F,IAAM,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,QAAQ,GAAG,IAAI,iCAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrF,MAAM,CAAC,IAAI,0BAAW,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC5D,CAAC;AALe,yBAAiB,oBAKhC,CAAA;AAED,oBAAoB,IAAsC,EAAE,SAAoC;IAE9F,EAAE,CAAC,CAAC,SAAS,IAAI,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC9B,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAM,QAAQ,GAAG,qBAAqB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,eAAQ,CAAiB,KAAK,EAAE,QAAQ,CAAC,CAAC;IAEvD,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,IAAM,KAAK,GAAG,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,CAAC,CAAC,EAAb,CAAa,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,eAAQ,CAAiB,KAAK,EAAE,QAAQ,CAAC,CAAC;IACvD,CAAC;AACH,CAAC;AAED,+BACI,IAAsC,EAAE,SAAmC;IAC7E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,KAAK;QAC5B,GAAG,CAAC,CAAY,UAAkB,EAAlB,KAAA,SAAS,CAAC,QAAQ,EAAlB,cAAkB,EAAlB,IAAkB,CAAC;YAA9B,IAAM,CAAC,SAAA;YACV,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACvD,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9B,CAAC;SACF;QACD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,8BAA8B,CAAyB;IACrD,MAAM,CAAC,IAAI,6BAAc,CACrB,IAAI,iCAAe,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,iCAAe,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,iCAAe,CAAC,CAAC,CAAC,IAAI,CAAC,EACtF,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AAED,6BAA6B,CAAyB,EAAE,CAAyB;IAC/E,MAAM,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,CAAC,YAAY,CAAC;AAC3C,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot} from './router_state';\nimport {TreeNode} from './utils/tree';\n\nexport function createRouterState(curr: RouterStateSnapshot, prevState: RouterState): RouterState {\n  const root = createNode(curr._root, prevState ? prevState._root : undefined);\n  const queryParams = prevState ? prevState.queryParams : new BehaviorSubject(curr.queryParams);\n  const fragment = prevState ? prevState.fragment : new BehaviorSubject(curr.fragment);\n  return new RouterState(root, queryParams, fragment, curr);\n}\n\nfunction createNode(curr: TreeNode<ActivatedRouteSnapshot>, prevState?: TreeNode<ActivatedRoute>):\n    TreeNode<ActivatedRoute> {\n  if (prevState && equalRouteSnapshots(prevState.value.snapshot, curr.value)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n\n    const children = createOrReuseChildren(curr, prevState);\n    return new TreeNode<ActivatedRoute>(value, children);\n\n  } else {\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(c));\n    return new TreeNode<ActivatedRoute>(value, children);\n  }\n}\n\nfunction createOrReuseChildren(\n    curr: TreeNode<ActivatedRouteSnapshot>, prevState: TreeNode<ActivatedRoute>) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (equalRouteSnapshots(p.value.snapshot, child.value)) {\n        return createNode(child, p);\n      }\n    }\n    return createNode(child);\n  });\n}\n\nfunction createActivatedRoute(c: ActivatedRouteSnapshot) {\n  return new ActivatedRoute(\n      new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.data),\n      c.outlet, c.component, c);\n}\n\nfunction equalRouteSnapshots(a: ActivatedRouteSnapshot, b: ActivatedRouteSnapshot): boolean {\n  return a._routeConfig === b._routeConfig;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}