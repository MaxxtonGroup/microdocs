{"version":3,"file":"apply_redirects.js","sourceRoot":"","sources":["../../../../modules/@angular/router/src/apply_redirects.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {of } from 'rxjs/observable/of';\n\nimport {Route, RouterConfig} from './config';\nimport {PRIMARY_OUTLET} from './shared';\nimport {UrlPathWithParams, UrlSegment, UrlTree, mapChildren} from './url_tree';\nimport {merge} from './utils/collection';\n\nclass NoMatch {\n  constructor(public segment: UrlSegment = null) {}\n}\nclass GlobalRedirect {\n  constructor(public paths: UrlPathWithParams[]) {}\n}\n\nexport function applyRedirects(urlTree: UrlTree, config: RouterConfig): Observable<UrlTree> {\n  try {\n    return createUrlTree(urlTree, expandSegment(config, urlTree.root, PRIMARY_OUTLET));\n  } catch (e) {\n    if (e instanceof GlobalRedirect) {\n      return createUrlTree(\n          urlTree, new UrlSegment([], {[PRIMARY_OUTLET]: new UrlSegment(e.paths, {})}));\n    } else if (e instanceof NoMatch) {\n      return new Observable<UrlTree>(\n          (obs: Observer<UrlTree>) =>\n              obs.error(new Error(`Cannot match any routes: '${e.segment}'`)));\n    } else {\n      return new Observable<UrlTree>((obs: Observer<UrlTree>) => obs.error(e));\n    }\n  }\n}\n\nfunction createUrlTree(urlTree: UrlTree, rootCandidate: UrlSegment): Observable<UrlTree> {\n  const root = rootCandidate.pathsWithParams.length > 0 ?\n      new UrlSegment([], {[PRIMARY_OUTLET]: rootCandidate}) :\n      rootCandidate;\n  return of (new UrlTree(root, urlTree.queryParams, urlTree.fragment));\n}\n\nfunction expandSegment(routes: Route[], segment: UrlSegment, outlet: string): UrlSegment {\n  if (segment.pathsWithParams.length === 0 && segment.hasChildren()) {\n    return new UrlSegment([], expandSegmentChildren(routes, segment));\n  } else {\n    return expandPathsWithParams(segment, routes, segment.pathsWithParams, outlet, true);\n  }\n}\n\nfunction expandSegmentChildren(routes: Route[], segment: UrlSegment): {[name: string]: UrlSegment} {\n  return mapChildren(segment, (child, childOutlet) => expandSegment(routes, child, childOutlet));\n}\n\nfunction expandPathsWithParams(\n    segment: UrlSegment, routes: Route[], paths: UrlPathWithParams[], outlet: string,\n    allowRedirects: boolean): UrlSegment {\n  for (let r of routes) {\n    try {\n      return expandPathsWithParamsAgainstRoute(segment, routes, r, paths, outlet, allowRedirects);\n    } catch (e) {\n      if (!(e instanceof NoMatch)) throw e;\n    }\n  }\n  throw new NoMatch(segment);\n}\n\nfunction expandPathsWithParamsAgainstRoute(\n    segment: UrlSegment, routes: Route[], route: Route, paths: UrlPathWithParams[], outlet: string,\n    allowRedirects: boolean): UrlSegment {\n  if (getOutlet(route) !== outlet) throw new NoMatch();\n  if (route.redirectTo !== undefined && !allowRedirects) throw new NoMatch();\n\n  if (route.redirectTo !== undefined) {\n    return expandPathsWithParamsAgainstRouteUsingRedirect(segment, routes, route, paths, outlet);\n  } else {\n    return matchPathsWithParamsAgainstRoute(segment, route, paths);\n  }\n}\n\nfunction expandPathsWithParamsAgainstRouteUsingRedirect(\n    segment: UrlSegment, routes: Route[], route: Route, paths: UrlPathWithParams[],\n    outlet: string): UrlSegment {\n  if (route.path === '**') {\n    return expandWildCardWithParamsAgainstRouteUsingRedirect(route);\n  } else {\n    return expandRegularPathWithParamsAgainstRouteUsingRedirect(\n        segment, routes, route, paths, outlet);\n  }\n}\n\nfunction expandWildCardWithParamsAgainstRouteUsingRedirect(route: Route): UrlSegment {\n  const newPaths = applyRedirectCommands([], route.redirectTo, {});\n  if (route.redirectTo.startsWith('/')) {\n    throw new GlobalRedirect(newPaths);\n  } else {\n    return new UrlSegment(newPaths, {});\n  }\n}\n\nfunction expandRegularPathWithParamsAgainstRouteUsingRedirect(\n    segment: UrlSegment, routes: Route[], route: Route, paths: UrlPathWithParams[],\n    outlet: string): UrlSegment {\n  const {consumedPaths, lastChild, positionalParamSegments} = match(segment, route, paths);\n  const newPaths =\n      applyRedirectCommands(consumedPaths, route.redirectTo, <any>positionalParamSegments);\n  if (route.redirectTo.startsWith('/')) {\n    throw new GlobalRedirect(newPaths);\n  } else {\n    return expandPathsWithParams(\n        segment, routes, newPaths.concat(paths.slice(lastChild)), outlet, false);\n  }\n}\n\nfunction matchPathsWithParamsAgainstRoute(\n    rawSegment: UrlSegment, route: Route, paths: UrlPathWithParams[]): UrlSegment {\n  if (route.path === '**') {\n    return new UrlSegment(paths, {});\n  } else {\n    const {consumedPaths, lastChild} = match(rawSegment, route, paths);\n    const childConfig = route.children ? route.children : [];\n    const rawSlicedPath = paths.slice(lastChild);\n\n    const {segment, slicedPath} = split(rawSegment, consumedPaths, rawSlicedPath, childConfig);\n\n    if (slicedPath.length === 0 && segment.hasChildren()) {\n      const children = expandSegmentChildren(childConfig, segment);\n      return new UrlSegment(consumedPaths, children);\n\n    } else if (childConfig.length === 0 && slicedPath.length === 0) {\n      return new UrlSegment(consumedPaths, {});\n\n    } else {\n      const cs = expandPathsWithParams(segment, childConfig, slicedPath, PRIMARY_OUTLET, true);\n      return new UrlSegment(consumedPaths.concat(cs.pathsWithParams), cs.children);\n    }\n  }\n}\n\nfunction match(segment: UrlSegment, route: Route, paths: UrlPathWithParams[]): {\n  consumedPaths: UrlPathWithParams[],\n  lastChild: number,\n  positionalParamSegments: {[k: string]: UrlPathWithParams}\n} {\n  if (route.path === '') {\n    if ((route.terminal || route.pathMatch === 'full') &&\n        (segment.hasChildren() || paths.length > 0)) {\n      throw new NoMatch();\n    } else {\n      return {consumedPaths: [], lastChild: 0, positionalParamSegments: {}};\n    }\n  }\n\n  const path = route.path;\n  const parts = path.split('/');\n  const positionalParamSegments: {[k: string]: UrlPathWithParams} = {};\n  const consumedPaths: UrlPathWithParams[] = [];\n\n  let currentIndex = 0;\n\n  for (let i = 0; i < parts.length; ++i) {\n    if (currentIndex >= paths.length) throw new NoMatch();\n    const current = paths[currentIndex];\n\n    const p = parts[i];\n    const isPosParam = p.startsWith(':');\n\n    if (!isPosParam && p !== current.path) throw new NoMatch();\n    if (isPosParam) {\n      positionalParamSegments[p.substring(1)] = current;\n    }\n    consumedPaths.push(current);\n    currentIndex++;\n  }\n\n  if (route.terminal && (segment.hasChildren() || currentIndex < paths.length)) {\n    throw new NoMatch();\n  }\n\n  return {consumedPaths, lastChild: currentIndex, positionalParamSegments};\n}\n\nfunction applyRedirectCommands(\n    paths: UrlPathWithParams[], redirectTo: string,\n    posParams: {[k: string]: UrlPathWithParams}): UrlPathWithParams[] {\n  const r = redirectTo.startsWith('/') ? redirectTo.substring(1) : redirectTo;\n  if (r === '') {\n    return [];\n  } else {\n    return createPaths(redirectTo, r.split('/'), paths, posParams);\n  }\n}\n\nfunction createPaths(\n    redirectTo: string, parts: string[], segments: UrlPathWithParams[],\n    posParams: {[k: string]: UrlPathWithParams}): UrlPathWithParams[] {\n  return parts.map(\n      p => p.startsWith(':') ? findPosParam(p, posParams, redirectTo) :\n                               findOrCreatePath(p, segments));\n}\n\nfunction findPosParam(\n    part: string, posParams: {[k: string]: UrlPathWithParams},\n    redirectTo: string): UrlPathWithParams {\n  const paramName = part.substring(1);\n  const pos = posParams[paramName];\n  if (!pos) throw new Error(`Cannot redirect to '${redirectTo}'. Cannot find '${part}'.`);\n  return pos;\n}\n\nfunction findOrCreatePath(part: string, paths: UrlPathWithParams[]): UrlPathWithParams {\n  let idx = 0;\n  for (const s of paths) {\n    if (s.path === part) {\n      paths.splice(idx);\n      return s;\n    }\n    idx++;\n  }\n  return new UrlPathWithParams(part, {});\n}\n\n\nfunction split(\n    segment: UrlSegment, consumedPaths: UrlPathWithParams[], slicedPath: UrlPathWithParams[],\n    config: Route[]) {\n  if (slicedPath.length > 0 &&\n      containsEmptyPathRedirectsWithNamedOutlets(segment, slicedPath, config)) {\n    const s = new UrlSegment(\n        consumedPaths,\n        createChildrenForEmptyPaths(config, new UrlSegment(slicedPath, segment.children)));\n    return {segment: mergeTrivialChildren(s), slicedPath: []};\n\n  } else if (slicedPath.length === 0 && containsEmptyPathRedirects(segment, slicedPath, config)) {\n    const s = new UrlSegment(\n        segment.pathsWithParams,\n        addEmptyPathsToChildrenIfNeeded(segment, slicedPath, config, segment.children));\n    return {segment: mergeTrivialChildren(s), slicedPath};\n\n  } else {\n    return {segment, slicedPath};\n  }\n}\n\nfunction mergeTrivialChildren(s: UrlSegment): UrlSegment {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegment(s.pathsWithParams.concat(c.pathsWithParams), c.children);\n  } else {\n    return s;\n  }\n}\n\nfunction addEmptyPathsToChildrenIfNeeded(\n    segment: UrlSegment, slicedPath: UrlPathWithParams[], routes: Route[],\n    children: {[name: string]: UrlSegment}): {[name: string]: UrlSegment} {\n  const res: {[name: string]: UrlSegment} = {};\n  for (let r of routes) {\n    if (emptyPathRedirect(segment, slicedPath, r) && !children[getOutlet(r)]) {\n      res[getOutlet(r)] = new UrlSegment([], {});\n    }\n  }\n  return merge(children, res);\n}\n\nfunction createChildrenForEmptyPaths(\n    routes: Route[], primarySegment: UrlSegment): {[name: string]: UrlSegment} {\n  const res: {[name: string]: UrlSegment} = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (let r of routes) {\n    if (r.path === '') {\n      res[getOutlet(r)] = new UrlSegment([], {});\n    }\n  }\n  return res;\n}\n\nfunction containsEmptyPathRedirectsWithNamedOutlets(\n    segment: UrlSegment, slicedPath: UrlPathWithParams[], routes: Route[]): boolean {\n  return routes\n             .filter(\n                 r => emptyPathRedirect(segment, slicedPath, r) && getOutlet(r) !== PRIMARY_OUTLET)\n             .length > 0;\n}\n\nfunction containsEmptyPathRedirects(\n    segment: UrlSegment, slicedPath: UrlPathWithParams[], routes: Route[]): boolean {\n  return routes.filter(r => emptyPathRedirect(segment, slicedPath, r)).length > 0;\n}\n\nfunction emptyPathRedirect(\n    segment: UrlSegment, slicedPath: UrlPathWithParams[], r: Route): boolean {\n  if ((segment.hasChildren() || slicedPath.length > 0) && (r.terminal || r.pathMatch === 'full'))\n    return false;\n  return r.path === '' && r.redirectTo !== undefined;\n}\n\nfunction getOutlet(route: Route): string {\n  return route.outlet ? route.outlet : PRIMARY_OUTLET;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}