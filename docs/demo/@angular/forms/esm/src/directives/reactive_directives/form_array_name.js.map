{"version":3,"file":"form_array_name.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/forms/src/directives/reactive_directives/form_array_name.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAqB,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAC,MAAM,eAAe;OAG9G,EAAC,mBAAmB,EAAE,aAAa,EAAC,MAAM,kBAAkB;OAC5D,EAAC,gBAAgB,EAAC,MAAM,sBAAsB;OAC9C,EAAC,sBAAsB,EAAE,iBAAiB,EAAE,WAAW,EAAC,MAAM,WAAW;AAKhF,OAAO,MAAM,qBAAqB;AAC9B,kBAAkB,CAAC,uBAAuB,CAAC;IACzC,OAAO,EAAE,gBAAgB;IACzB,WAAW,EAAE,UAAU,CAAC,MAAM,aAAa,CAAC;CAC7C,CAAC;AACN,mCAAmC,gBAAgB;IAUjD,YAAa,MAAwB,EAAE,UAAiB,EAAE,eAAsB;QAC9E,OAAO,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;IAC1C,CAAC;IAED,QAAQ,KAAW,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE3D,WAAW,KAAW,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEjE,IAAI,OAAO,KAAgB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE1E,IAAI,aAAa,KAAyB,MAAM,CAAqB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAElG,IAAI,IAAI,KAAe,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAErE,IAAI,SAAS,KAAkB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAE5E,IAAI,cAAc,KAAuB,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAelG,CAAC;AAdD,kBAAkB;AACX,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,iBAAiB,EAAE,SAAS,EAAE,CAAC,qBAAqB,CAAC,EAAC,EAAG,EAAE;CAC/F,CAAC;AACF,kBAAkB;AACX,4BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,gBAAgB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;IAC5E,EAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,aAAa,EAAG,EAAE,EAAG,EAAC;IAC5G,EAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,mBAAmB,EAAG,EAAE,EAAG,EAAC;CACjH,CAAC;AACF,kBAAkB;AACX,4BAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;CACpD,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormArray} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {composeAsyncValidators, composeValidators, controlPath} from '../shared';\nimport {AsyncValidatorFn, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\n\nexport const formArrayNameProvider: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: ControlContainer,\n      useExisting: forwardRef(() => FormArrayName)\n    };\nexport class FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[]; name: string;\n\n  constructor( parent: ControlContainer, validators: any[], asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  ngOnInit(): void { this.formDirective.addFormArray(this); }\n\n  ngOnDestroy(): void { this.formDirective.removeFormArray(this); }\n\n  get control(): FormArray { return this.formDirective.getFormArray(this); }\n\n  get formDirective(): FormGroupDirective { return <FormGroupDirective>this._parent.formDirective; }\n\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formArrayName]', providers: [formArrayNameProvider]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formArrayName', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}