{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH;;;;GAIG;AAEH,8BAA4C,iBAAiB,CAAC,CAAA;AAI9D,IAAI,OAAO,GAAQ,CAAC,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AAErE;;;;;GAKG;AACQ,cAAM,GAAa,OAAO,CAAC,MAAM,CAAC;AAE7C;;;;;GAKG;AACQ,iBAAS,GAAa,OAAO,CAAC,SAAS,CAAC;AAEnD;;;;;GAKG;AACQ,gBAAQ,GAAa,OAAO,CAAC,QAAQ,CAAC;AAEjD;;;;;GAKG;AACQ,iBAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAEzC;;;;;GAKG;AACQ,iBAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAEzC;;;;;GAKG;AACQ,iBAAS,GAAa,OAAO,CAAC,SAAS,CAAC;AAEnD;;;;;GAKG;AACQ,kBAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AAE3C;;;;;GAKG;AACQ,UAAE,GAAG,OAAO,CAAC,EAAE,CAAC;AAE3B;;;;;GAKG;AACQ,WAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AAE7B;;;;;GAKG;AACQ,WAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AAE7B;;;;;GAKG;AACQ,WAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AAG7B,IAAI,YAAY,GAAiB,+BAAe,EAAE,CAAC;AAEnD,6CAA6C;AAC7C,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACvB,kBAAU,CAAC,cAAQ,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC;AAED;;;;;GAKG;AACH,sBAA6B,SAAqB;IAChD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QAAC,MAAM,CAAC;IACvB,IAAI,CAAC;QACH,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IACvC,CAAE;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,IAAI,KAAK,CACX,2FAA2F;YAC3F,8FAA8F;YAC9F,wBAAwB,CAAC,CAAC;IAChC,CAAC;AACH,CAAC;AAVe,oBAAY,eAU3B,CAAA;AAED;;GAEG;AACH,6BAAoC,EAAoB;IACtD,kBAAU,CAAC,cAAQ,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC;AAFe,2BAAmB,sBAElC,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Public Test Library for unit testing Angular2 Applications. Assumes that you are running\n * with Jasmine, Mocha, or a similar framework which exports a beforeEach function and\n * allows tests to be asynchronous by either returning a promise or using a 'done' parameter.\n */\n\nimport {TestInjector, getTestInjector} from './test_injector';\n\ndeclare var global: any;\n\nvar _global = <any>(typeof window === 'undefined' ? global : window);\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var expect: Function = _global.expect;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var afterEach: Function = _global.afterEach;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var describe: Function = _global.describe;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var fdescribe = _global.fdescribe;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var ddescribe = _global.ddescribe;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var xdescribe: Function = _global.xdescribe;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var beforeEach = _global.beforeEach;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var it = _global.it;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var fit = _global.fit;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var iit = _global.fit;\n\n/**\n * @deprecated you no longer need to import jasmine functions from @angular/core/testing. Simply use\n * the globals.\n *\n * See http://jasmine.github.io/ for more details.\n */\nexport var xit = _global.xit;\n\n\nvar testInjector: TestInjector = getTestInjector();\n\n// Reset the test providers before each test.\nif (_global.beforeEach) {\n  beforeEach(() => { testInjector.reset(); });\n}\n\n/**\n * Allows overriding default providers of the test injector,\n * which are defined in test_injector.js\n *\n * @stable\n */\nexport function addProviders(providers: Array<any>): void {\n  if (!providers) return;\n  try {\n    testInjector.addProviders(providers);\n  } catch (e) {\n    throw new Error(\n        'addProviders can\\'t be called after the injector has been already created for this test. ' +\n        'This is most likely because you\\'ve already used the injector to inject a beforeEach or the ' +\n        'current `it` function.');\n  }\n}\n\n/**\n * @deprecated Use beforeEach(() => addProviders())\n */\nexport function beforeEachProviders(fn: () => Array<any>): void {\n  beforeEach(() => { addProviders(fn()); });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}