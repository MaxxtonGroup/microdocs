[
    {
        "name": "AuthOptions",
        "documentation": "AuthOptions class\nUsed to configure the AuthService.",
        "type": "typeof AuthOptions",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "provider",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "gateway",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "userInfo",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "clientId",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "scope",
                        "documentation": "",
                        "type": "string"
                    }
                ],
                "returnType": "AuthOptions",
                "documentation": ""
            }
        ]
    },
    {
        "name": "Token",
        "documentation": "Token class\nThe token received from the oauth2 provider.",
        "type": "typeof Token",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "token",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "tokenType",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "expiresDate",
                        "documentation": "",
                        "type": "Date"
                    },
                    {
                        "name": "jti",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "details",
                        "documentation": "",
                        "type": "any"
                    }
                ],
                "returnType": "Token",
                "documentation": ""
            }
        ]
    },
    {
        "name": "TokenService",
        "documentation": "TokenService class\nThe service used to store, load and delete the token.\n\nTODO Create an service for the localStorage where we check if the browser supports this functionality.",
        "type": "typeof TokenService",
        "constructors": [
            {
                "parameters": [],
                "returnType": "TokenService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "TokenParser",
        "documentation": "TokenParser\nA helper class to parse a hash into a Token.",
        "type": "typeof TokenParser",
        "constructors": [
            {
                "parameters": [],
                "returnType": "TokenParser",
                "documentation": ""
            }
        ]
    },
    {
        "name": "Right",
        "documentation": "Created by Reinartz.T on 4-3-2016.\nRight class\nDefines a Right",
        "type": "typeof Right",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "name",
                        "documentation": "",
                        "type": "string"
                    }
                ],
                "returnType": "Right",
                "documentation": ""
            }
        ]
    },
    {
        "name": "User",
        "documentation": "User class\nHolds the info of the authorizes user.",
        "type": "typeof User",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "clientId",
                        "documentation": "",
                        "type": "number"
                    },
                    {
                        "name": "firstName",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "rights",
                        "documentation": "",
                        "type": "Right[]"
                    },
                    {
                        "name": "locale",
                        "documentation": "",
                        "type": "string"
                    },
                    {
                        "name": "login",
                        "documentation": "",
                        "type": "string"
                    }
                ],
                "returnType": "User",
                "documentation": ""
            }
        ]
    },
    {
        "name": "UserService",
        "documentation": "",
        "type": "typeof UserService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "http",
                        "documentation": "",
                        "type": "Http"
                    },
                    {
                        "name": "options",
                        "documentation": "",
                        "type": "AuthOptions"
                    },
                    {
                        "name": "tokenService",
                        "documentation": "",
                        "type": "TokenService"
                    }
                ],
                "returnType": "UserService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "GatewayService",
        "documentation": "Gateway Service\nService used to communicate with the gateway\nWarps the Http service and inserts the authorization header.\n\n<injected>",
        "type": "typeof GatewayService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "httpService",
                        "documentation": "",
                        "type": "Http"
                    },
                    {
                        "name": "tokenService",
                        "documentation": "",
                        "type": "TokenService"
                    },
                    {
                        "name": "options",
                        "documentation": "",
                        "type": "AuthOptions"
                    },
                    {
                        "name": "userService",
                        "documentation": "",
                        "type": "UserService"
                    }
                ],
                "returnType": "GatewayService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "EnvironmentService",
        "documentation": "Environment Service provider\n\nUsed to stored the current active environment",
        "type": "typeof EnvironmentService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "activeEnvironment",
                        "documentation": "",
                        "type": "EnvironmentModel"
                    }
                ],
                "returnType": "EnvironmentService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "AuthService",
        "documentation": "Authorization Service\nService used to handle the authorization and fetch the user info\n\n<injected>",
        "type": "typeof AuthService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "gatewayService",
                        "documentation": "",
                        "type": "GatewayService"
                    },
                    {
                        "name": "tokenService",
                        "documentation": "",
                        "type": "TokenService"
                    },
                    {
                        "name": "options",
                        "documentation": "",
                        "type": "AuthOptions"
                    },
                    {
                        "name": "userService",
                        "documentation": "",
                        "type": "UserService"
                    }
                ],
                "returnType": "AuthService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "RestService",
        "documentation": "",
        "type": "typeof RestService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "gw",
                        "documentation": "",
                        "type": "GatewayService"
                    },
                    {
                        "name": "auth",
                        "documentation": "",
                        "type": "AuthService"
                    },
                    {
                        "name": "userService",
                        "documentation": "",
                        "type": "UserService"
                    }
                ],
                "returnType": "RestService",
                "documentation": ""
            }
        ]
    },
    {
        "name": "AddressBase",
        "documentation": "",
        "type": "typeof AddressBase",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "addressObject",
                        "documentation": "",
                        "type": "AddressBase"
                    }
                ],
                "returnType": "AddressBase",
                "documentation": ""
            }
        ]
    },
    {
        "name": "RestClient",
        "documentation": "Angular 2 RestClient class.\n\n@class RESTClient\n@constructor",
        "type": "typeof RestClient",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "http",
                        "documentation": "",
                        "type": "HttpClient"
                    }
                ],
                "returnType": "RestClient",
                "documentation": ""
            }
        ]
    },
    {
        "name": "AddressService",
        "documentation": "Address service for communicating with the address micro service.\nProviding addresses, countries, bankaccounttypes and states.\n\n@author T. Reinartz\n@author R. Sonke",
        "type": "typeof AddressService",
        "constructors": [
            {
                "parameters": [
                    {
                        "name": "rs",
                        "documentation": "",
                        "type": "RestService"
                    },
                    {
                        "name": "http",
                        "documentation": "",
                        "type": "Http"
                    }
                ],
                "returnType": "AddressService",
                "documentation": ""
            }
        ]
    }
]