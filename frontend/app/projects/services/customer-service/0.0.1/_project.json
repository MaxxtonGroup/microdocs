{
  "models": {
    "com.example.service.customer.domain.Address": {
      "type": "object",
      "classType": {
        "simpleName": "Address",
        "name": "com.example.service.customer.domain.Address"
      },
      "required": false,
      "properties": {
        "zipCode": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "4512CD"
        },
        "address": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "dam"
        },
        "city": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "Middelburg"
        },
        "houseNumber": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "6"
        },
        "addressId": {
          "type": "number",
          "description": "",
          "required": false,
          "dummy": 15
        }
      }
    },
    "com.example.service.customer.domain.Customer": {
      "type": "object",
      "classType": {
        "simpleName": "Customer",
        "name": "com.example.service.customer.domain.Customer"
      },
      "required": false,
      "properties": {
        "firstName": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "John"
        },
        "lastName": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "Snow"
        },
        "billAddress": {
          "$ref": "com.example.service.customer.domain.Address"
        },
        "customerId": {
          "type": "number",
          "description": "",
          "required": false,
          "dummy": 23
        },
        "deliverAddress": {
          "$ref": "com.example.service.customer.domain.Address"
        },
        "email": {
          "type": "string",
          "description": "",
          "required": false,
          "dummy": "jonyy17@xxx.com"
        }
      }
    }
  },
  "endpoints": [
    {
      "method": "GET",
      "path": "\/api\/v1\/customers\/",
      "pathVariables": [],
      "requestParams": [
        {
          "name": "page",
          "type": "number",
          "description": "page number",
          "required": false,
          "defaultValue": "0"
        },
        {
          "name": "size",
          "type": "number",
          "description": "items per page",
          "required": false,
          "defaultValue": "20"
        },
        {
          "name": "sort",
          "type": "number",
          "description": "sort option",
          "required": false,
          "defaultValue": "asc"
        }
      ],
      "responseBody": {
        "type": "object",
        "classType": {
          "simpleName": "Page",
          "name": "org.springframework.data.domain.Page",
          "genericType": {
            "simpleName": "Customer",
            "name": "com.example.service.customer.domain.Customer"
          }
        },
        "required": false,
        "properties": {
          "number": {
            "type": "number",
            "required": false,
            "dummy": 1
          },
          "last": {
            "type": "boolean",
            "required": false,
            "dummy": false
          },
          "size": {
            "type": "number",
            "required": false,
            "dummy": 20
          },
          "numberOfElements": {
            "type": "number",
            "required": false,
            "dummy": 20
          },
          "totalPages": {
            "type": "number",
            "required": false,
            "dummy": 20
          },
          "sort": {
            "type": "object",
            "required": false,
            "properties": []
          },
          "content": {
            "type": "array",
            "classType": {
              "simpleName": "Customer",
              "name": "com.example.service.customer.domain.Customer"
            },
            "required": false,
            "items": {
              "$ref": "com.example.service.customer.domain.Customer"
            }
          },
          "first": {
            "type": "boolean",
            "required": false,
            "dummy": true
          },
          "totalElements": {
            "type": "number",
            "required": false,
            "dummy": 196
          }
        }
      },
      "description": "Request a page of customers",
      "consumes": [
        "application\/json"
      ],
      "produces": [
        "application\/json"
      ],
      "responses": [
        {
          "status": 200,
          "statusName": "OK"
        }
      ],
      "source": {
        "name": "com.example.service.customer.controller.CustomerController",
        "simpleName": "CustomerController",
        "lineNumber": 30
      }
    },
    {
      "method": "GET",
      "path": "\/api\/v1\/customers\/{customerId}",
      "pathVariables": [
        {
          "name": "customerId",
          "type": "number",
          "required": false
        }
      ],
      "requestParams": [],
      "responseBody": {
        "$ref": "com.example.service.customer.domain.Customer"
      },
      "description": "Get a specific customer by id",
      "consumes": [
        "application\/json"
      ],
      "produces": [
        "application\/json"
      ],
      "responses": [
        {
          "status": 200,
          "statusName": "OK"
        },
        {
          "status": 404,
          "statusName": "NOT_FOUND",
          "description": "if customer doesn't exists"
        }
      ],
      "source": {
        "name": "com.example.service.customer.controller.CustomerController",
        "simpleName": "CustomerController",
        "lineNumber": 42
      }
    },
    {
      "method": "POST",
      "path": "\/api\/v1\/customers\/",
      "pathVariables": [],
      "requestParams": [],
      "requestBody": {
        "$ref": "com.example.service.customer.domain.Customer"
      },
      "responseBody": {
        "$ref": "com.example.service.customer.domain.Customer"
      },
      "description": "Create new customer",
      "consumes": [
        "application\/json"
      ],
      "produces": [
        "application\/json"
      ],
      "responses": [
        {
          "status": 201,
          "statusName": "CREATED",
          "description": "customer is created"
        },
        {
          "status": 409,
          "statusName": "CONFLICT",
          "description": "customer with the same email already exists"
        }
      ],
      "source": {
        "name": "com.example.service.customer.controller.CustomerController",
        "simpleName": "CustomerController",
        "lineNumber": 58
      }
    },
    {
      "method": "DELETE",
      "path": "\/api\/v1\/customers\/{customerId}",
      "pathVariables": [
        {
          "name": "customerId",
          "type": "number",
          "required": false
        }
      ],
      "requestParams": [],
      "description": "Delete customer by id",
      "consumes": [
        "application\/json"
      ],
      "produces": [
        "application\/json"
      ],
      "responses": [
        {
          "status": 200,
          "statusName": "OK",
          "description": "the customer is removed"
        },
        {
          "status": 404,
          "statusName": "NOT_FOUND",
          "description": "the customer did not exists"
        }
      ],
      "source": {
        "name": "com.example.service.customer.controller.CustomerController",
        "simpleName": "CustomerController",
        "lineNumber": 75
      }
    }
  ],
  "Repository": [
    {
      "className": "com.example.service.customer.repository.CustomerRepository",
      "description": "Repository for persisting Customers"
    }
  ],
  "client": [],
  "Service": [
    {
      "className": "com.example.service.customer.service.CustomerService",
      "description": "Service for managing CRUD actions on Customers"
    }
  ],
  "authors": [
    "steven hermans"
  ],
  "links": [
    {
      "rel": "javadoc",
      "href": "\/projects\/services\/customer-service\/0.0.1\/javadoc"
    },
    {
      "rel": "source",
      "href": "\/projects\/services\/customer-service\/0.0.1\/source"
    }
  ],
  "name": "customer-service",
  "group": "services",
  "version": "0.0.1",
  "versions": [
    "0.0.1"
  ],
  "errors": 0
}
